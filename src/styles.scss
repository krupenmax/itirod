
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$Lab-primary: mat.define-palette(mat.$indigo-palette);
$Lab-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$Lab-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$Lab-theme: mat.define-light-theme((
  color: (
    primary: $Lab-primary,
    accent: $Lab-accent,
    warn: $Lab-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($Lab-theme);

@import url("./assets/fonts/fonts.scss");
@import "~leaflet/dist/leaflet.css";

html {
  	width: 100%;
	min-height: 100%;
	height: 100%;
}

body {
    width: 100%;
    margin: 0;
	color: #120000;
	font-weight: 400;
	letter-spacing: 0.005em;
	background-color: #d9dbf1;
	height: 100%;
	min-height: 100%;
	display: flex;
	align-items: center;
}
